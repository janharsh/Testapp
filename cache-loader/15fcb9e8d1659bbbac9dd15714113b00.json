{"remainingRequest":"/Users/harsh/Documents/jHipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/harsh/Documents/jHipster/node_modules/ts-loader/index.js??ref--4-3!/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js!/Users/harsh/Documents/jHipster/src/main/webapp/app/modules/administration/metrics/metrics.tsx","dependencies":[{"path":"/Users/harsh/Documents/jHipster/src/main/webapp/app/modules/administration/metrics/metrics.tsx","mtime":1555084346000},{"path":"/Users/harsh/Documents/jHipster/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/harsh/Documents/jHipster/node_modules/cache-loader/dist/cjs.js","mtime":1555084384000},{"path":"/Users/harsh/Documents/jHipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harsh/Documents/jHipster/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col, Row } from 'reactstrap';\nimport { CacheMetrics, DatasourceMetrics, GarbageCollectorMetrics, HttpRequestMetrics, JvmMemory, JvmThreads, EndpointsRequestsMetrics, SystemMetrics } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { APP_TIMESTAMP_FORMAT, APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT, APP_WHOLE_NUMBER_FORMAT } from 'app/config/constants';\nimport { systemMetrics, systemThreadDump } from '../administration.reducer';\nvar MetricsPage = /** @class */ (function (_super) {\n    tslib_1.__extends(MetricsPage, _super);\n    function MetricsPage() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            showModal: false\n        };\n        _this.getMetrics = function () {\n            if (!_this.props.isFetching) {\n                _this.props.systemMetrics();\n                _this.props.systemThreadDump();\n            }\n        };\n        return _this;\n    }\n    MetricsPage.prototype.componentDidMount = function () {\n        this.props.systemMetrics();\n        this.props.systemThreadDump();\n    };\n    MetricsPage.prototype.render = function () {\n        var _a = this.props, metrics = _a.metrics, threadDump = _a.threadDump, isFetching = _a.isFetching;\n        return (React.createElement(\"div\", null,\n            React.createElement(\"h2\", { id: \"metrics-page-heading\" }, \"Application Metrics\"),\n            React.createElement(\"p\", null,\n                React.createElement(Button, { onClick: this.getMetrics, color: isFetching ? 'btn btn-danger' : 'btn btn-primary', disabled: isFetching },\n                    React.createElement(FontAwesomeIcon, { icon: \"sync\" }),\n                    \"\\u00A0 Refresh\")),\n            React.createElement(\"hr\", null),\n            React.createElement(Row, null,\n                React.createElement(Col, { sm: \"12\" },\n                    React.createElement(\"h3\", null, \"JVM Metrics\"),\n                    React.createElement(Row, null,\n                        React.createElement(Col, { md: \"4\" }, metrics && metrics.jvm ? React.createElement(JvmMemory, { jvmMetrics: metrics.jvm, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT }) : ''),\n                        React.createElement(Col, { md: \"4\" }, threadDump ? React.createElement(JvmThreads, { jvmThreads: threadDump, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT }) : ''),\n                        React.createElement(Col, { md: \"4\" }, metrics && metrics.processMetrics ? (React.createElement(SystemMetrics, { systemMetrics: metrics.processMetrics, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT, timestampFormat: APP_TIMESTAMP_FORMAT })) : (''))))),\n            metrics && metrics.garbageCollector ? (React.createElement(GarbageCollectorMetrics, { garbageCollectorMetrics: metrics.garbageCollector, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT })) : (''),\n            metrics && metrics['http.server.requests'] ? (React.createElement(HttpRequestMetrics, { requestMetrics: metrics['http.server.requests'], twoDigitAfterPointFormat: APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT })) : (''),\n            metrics && metrics.endpointsRequests ? (React.createElement(EndpointsRequestsMetrics, { endpointsRequestsMetrics: metrics.endpointsRequests, wholeNumberFormat: APP_WHOLE_NUMBER_FORMAT })) : (''),\n            metrics.cache ? (React.createElement(Row, null,\n                React.createElement(Col, { sm: \"12\" },\n                    React.createElement(CacheMetrics, { cacheMetrics: metrics.cache, twoDigitAfterPointFormat: APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT })))) : (''),\n            metrics.databases && JSON.stringify(metrics.databases) !== '{}' ? (React.createElement(Row, null,\n                React.createElement(Col, { sm: \"12\" },\n                    React.createElement(DatasourceMetrics, { datasourceMetrics: metrics.databases, twoDigitAfterPointFormat: APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT })))) : ('')));\n    };\n    return MetricsPage;\n}(React.Component));\nexport { MetricsPage };\nvar mapStateToProps = function (storeState) { return ({\n    metrics: storeState.administration.metrics,\n    isFetching: storeState.administration.loading,\n    threadDump: storeState.administration.threadDump\n}); };\nvar mapDispatchToProps = { systemMetrics: systemMetrics, systemThreadDump: systemThreadDump };\nexport default connect(mapStateToProps, mapDispatchToProps)(MetricsPage);\n",{"version":3,"file":"/Users/harsh/Documents/jHipster/src/main/webapp/app/modules/administration/metrics/metrics.tsx","sourceRoot":"","sources":["/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js!/Users/harsh/Documents/jHipster/src/main/webapp/app/modules/administration/metrics/metrics.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAY,GAAG,EAAS,MAAM,YAAY,CAAC;AAC/D,OAAO,EACL,YAAY,EACZ,iBAAiB,EACjB,uBAAuB,EACvB,kBAAkB,EAClB,SAAS,EACT,UAAU,EACV,wBAAwB,EACxB,aAAa,EAEd,MAAM,gBAAgB,CAAC;AACxB,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAEjE,OAAO,EAAE,oBAAoB,EAAE,wCAAwC,EAAE,uBAAuB,EAAE,MAAM,sBAAsB,CAAC;AAC/H,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,2BAA2B,CAAC;AAS5E;IAAiC,uCAAqD;IAAtF;QAAA,qEAkGC;QAjGC,WAAK,GAAsB;YACzB,SAAS,EAAE,KAAK;SACjB,CAAC;QAOF,gBAAU,GAAG;YACX,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE;gBAC1B,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;gBAC3B,KAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;aAC/B;QACH,CAAC,CAAC;;IAmFJ,CAAC;IA7FC,uCAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC;IAChC,CAAC;IASD,4BAAM,GAAN;QACQ,IAAA,eAAgD,EAA9C,oBAAO,EAAE,0BAAU,EAAE,0BAAU,CAAgB;QACvD,OAAO,CACL;YACE,4BAAI,EAAE,EAAC,sBAAsB,0BAAyB;YACtD;gBACE,oBAAC,MAAM,IAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,QAAQ,EAAE,UAAU;oBAC9G,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG;qCAExB,CACP;YACJ,+BAAM;YAEN,oBAAC,GAAG;gBACF,oBAAC,GAAG,IAAC,EAAE,EAAC,IAAI;oBACV,8CAAoB;oBACpB,oBAAC,GAAG;wBACF,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG,IACR,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,oBAAC,SAAS,IAAC,UAAU,EAAE,OAAO,CAAC,GAAG,EAAE,iBAAiB,EAAE,uBAAuB,GAAI,CAAC,CAAC,CAAC,EAAE,CAC7G;wBACN,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG,IAAE,UAAU,CAAC,CAAC,CAAC,oBAAC,UAAU,IAAC,UAAU,EAAE,UAAU,EAAE,iBAAiB,EAAE,uBAAuB,GAAI,CAAC,CAAC,CAAC,EAAE,CAAO;wBACxH,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG,IACR,OAAO,IAAI,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CACnC,oBAAC,aAAa,IACZ,aAAa,EAAE,OAAO,CAAC,cAAc,EACrC,iBAAiB,EAAE,uBAAuB,EAC1C,eAAe,EAAE,oBAAoB,GACrC,CACH,CAAC,CAAC,CAAC,CACF,EAAE,CACH,CACG,CACF,CACF,CACF;YAEL,OAAO,IAAI,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CACrC,oBAAC,uBAAuB,IAAC,uBAAuB,EAAE,OAAO,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,uBAAuB,GAAI,CAC3H,CAAC,CAAC,CAAC,CACF,EAAE,CACH;YACA,OAAO,IAAI,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAC5C,oBAAC,kBAAkB,IACjB,cAAc,EAAE,OAAO,CAAC,sBAAsB,CAAC,EAC/C,wBAAwB,EAAE,wCAAwC,EAClE,iBAAiB,EAAE,uBAAuB,GAC1C,CACH,CAAC,CAAC,CAAC,CACF,EAAE,CACH;YACA,OAAO,IAAI,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC,CACtC,oBAAC,wBAAwB,IAAC,wBAAwB,EAAE,OAAO,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,uBAAuB,GAAI,CAC9H,CAAC,CAAC,CAAC,CACF,EAAE,CACH;YAEA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CACf,oBAAC,GAAG;gBACF,oBAAC,GAAG,IAAC,EAAE,EAAC,IAAI;oBACV,oBAAC,YAAY,IAAC,YAAY,EAAE,OAAO,CAAC,KAAK,EAAE,wBAAwB,EAAE,wCAAwC,GAAI,CAC7G,CACF,CACP,CAAC,CAAC,CAAC,CACF,EAAE,CACH;YAEA,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CACjE,oBAAC,GAAG;gBACF,oBAAC,GAAG,IAAC,EAAE,EAAC,IAAI;oBACV,oBAAC,iBAAiB,IAChB,iBAAiB,EAAE,OAAO,CAAC,SAAS,EACpC,wBAAwB,EAAE,wCAAwC,GAClE,CACE,CACF,CACP,CAAC,CAAC,CAAC,CACF,EAAE,CACH,CACG,CACP,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,AAlGD,CAAiC,KAAK,CAAC,SAAS,GAkG/C;;AAED,IAAM,eAAe,GAAG,UAAC,UAAsB,IAAK,OAAA,CAAC;IACnD,OAAO,EAAE,UAAU,CAAC,cAAc,CAAC,OAAO;IAC1C,UAAU,EAAE,UAAU,CAAC,cAAc,CAAC,OAAO;IAC7C,UAAU,EAAE,UAAU,CAAC,cAAc,CAAC,UAAU;CACjD,CAAC,EAJkD,CAIlD,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,aAAa,eAAA,EAAE,gBAAgB,kBAAA,EAAE,CAAC;AAK/D,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col, Progress, Row, Table } from 'reactstrap';\nimport {\n  CacheMetrics,\n  DatasourceMetrics,\n  GarbageCollectorMetrics,\n  HttpRequestMetrics,\n  JvmMemory,\n  JvmThreads,\n  EndpointsRequestsMetrics,\n  SystemMetrics,\n  Translate\n} from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { APP_TIMESTAMP_FORMAT, APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT, APP_WHOLE_NUMBER_FORMAT } from 'app/config/constants';\nimport { systemMetrics, systemThreadDump } from '../administration.reducer';\nimport { IRootState } from 'app/shared/reducers';\n\nexport interface IMetricsPageProps extends StateProps, DispatchProps {}\n\nexport interface IMetricsPageState {\n  showModal: boolean;\n}\n\nexport class MetricsPage extends React.Component<IMetricsPageProps, IMetricsPageState> {\n  state: IMetricsPageState = {\n    showModal: false\n  };\n\n  componentDidMount() {\n    this.props.systemMetrics();\n    this.props.systemThreadDump();\n  }\n\n  getMetrics = () => {\n    if (!this.props.isFetching) {\n      this.props.systemMetrics();\n      this.props.systemThreadDump();\n    }\n  };\n\n  render() {\n    const { metrics, threadDump, isFetching } = this.props;\n    return (\n      <div>\n        <h2 id=\"metrics-page-heading\">Application Metrics</h2>\n        <p>\n          <Button onClick={this.getMetrics} color={isFetching ? 'btn btn-danger' : 'btn btn-primary'} disabled={isFetching}>\n            <FontAwesomeIcon icon=\"sync\" />\n            &nbsp; Refresh\n          </Button>\n        </p>\n        <hr />\n\n        <Row>\n          <Col sm=\"12\">\n            <h3>JVM Metrics</h3>\n            <Row>\n              <Col md=\"4\">\n                {metrics && metrics.jvm ? <JvmMemory jvmMetrics={metrics.jvm} wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT} /> : ''}\n              </Col>\n              <Col md=\"4\">{threadDump ? <JvmThreads jvmThreads={threadDump} wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT} /> : ''}</Col>\n              <Col md=\"4\">\n                {metrics && metrics.processMetrics ? (\n                  <SystemMetrics\n                    systemMetrics={metrics.processMetrics}\n                    wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT}\n                    timestampFormat={APP_TIMESTAMP_FORMAT}\n                  />\n                ) : (\n                  ''\n                )}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n        {metrics && metrics.garbageCollector ? (\n          <GarbageCollectorMetrics garbageCollectorMetrics={metrics.garbageCollector} wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT} />\n        ) : (\n          ''\n        )}\n        {metrics && metrics['http.server.requests'] ? (\n          <HttpRequestMetrics\n            requestMetrics={metrics['http.server.requests']}\n            twoDigitAfterPointFormat={APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT}\n            wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT}\n          />\n        ) : (\n          ''\n        )}\n        {metrics && metrics.endpointsRequests ? (\n          <EndpointsRequestsMetrics endpointsRequestsMetrics={metrics.endpointsRequests} wholeNumberFormat={APP_WHOLE_NUMBER_FORMAT} />\n        ) : (\n          ''\n        )}\n\n        {metrics.cache ? (\n          <Row>\n            <Col sm=\"12\">\n              <CacheMetrics cacheMetrics={metrics.cache} twoDigitAfterPointFormat={APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT} />\n            </Col>\n          </Row>\n        ) : (\n          ''\n        )}\n\n        {metrics.databases && JSON.stringify(metrics.databases) !== '{}' ? (\n          <Row>\n            <Col sm=\"12\">\n              <DatasourceMetrics\n                datasourceMetrics={metrics.databases}\n                twoDigitAfterPointFormat={APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT}\n              />\n            </Col>\n          </Row>\n        ) : (\n          ''\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  metrics: storeState.administration.metrics,\n  isFetching: storeState.administration.loading,\n  threadDump: storeState.administration.threadDump\n});\n\nconst mapDispatchToProps = { systemMetrics, systemThreadDump };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MetricsPage);\n"]}]}