{"remainingRequest":"/Users/harsh/Documents/jHipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/harsh/Documents/jHipster/node_modules/ts-loader/index.js??ref--4-3!/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js!/Users/harsh/Documents/jHipster/src/main/webapp/app/app.tsx","dependencies":[{"path":"/Users/harsh/Documents/jHipster/src/main/webapp/app/app.tsx","mtime":1555084344000},{"path":"/Users/harsh/Documents/jHipster/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/harsh/Documents/jHipster/node_modules/cache-loader/dist/cjs.js","mtime":1555084384000},{"path":"/Users/harsh/Documents/jHipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harsh/Documents/jHipster/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './app.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'reactstrap';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getSession } from 'app/shared/reducers/authentication';\nimport { getProfile } from 'app/shared/reducers/application-profile';\nimport Header from 'app/shared/layout/header/header';\nimport Footer from 'app/shared/layout/footer/footer';\nimport { hasAnyAuthority } from 'app/shared/auth/private-route';\nimport ErrorBoundary from 'app/shared/error/error-boundary';\nimport { AUTHORITIES } from 'app/config/constants';\nimport AppRoutes from 'app/routes';\nvar App = /** @class */ (function (_super) {\n    tslib_1.__extends(App, _super);\n    function App() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    App.prototype.componentDidMount = function () {\n        this.props.getSession();\n        this.props.getProfile();\n    };\n    App.prototype.render = function () {\n        var paddingTop = '60px';\n        return (React.createElement(Router, null,\n            React.createElement(\"div\", { className: \"app-container\", style: { paddingTop: paddingTop } },\n                React.createElement(ToastContainer, { position: toast.POSITION.TOP_LEFT, className: \"toastify-container\", toastClassName: \"toastify-toast\" }),\n                React.createElement(ErrorBoundary, null,\n                    React.createElement(Header, { isAuthenticated: this.props.isAuthenticated, isAdmin: this.props.isAdmin, ribbonEnv: this.props.ribbonEnv, isInProduction: this.props.isInProduction, isSwaggerEnabled: this.props.isSwaggerEnabled })),\n                React.createElement(\"div\", { className: \"container-fluid view-container\", id: \"app-view-container\" },\n                    React.createElement(Card, { className: \"jh-card\" },\n                        React.createElement(ErrorBoundary, null,\n                            React.createElement(AppRoutes, null))),\n                    React.createElement(Footer, null)))));\n    };\n    return App;\n}(React.Component));\nexport { App };\nvar mapStateToProps = function (_a) {\n    var authentication = _a.authentication, applicationProfile = _a.applicationProfile;\n    return ({\n        isAuthenticated: authentication.isAuthenticated,\n        isAdmin: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.ADMIN]),\n        ribbonEnv: applicationProfile.ribbonEnv,\n        isInProduction: applicationProfile.inProduction,\n        isSwaggerEnabled: applicationProfile.isSwaggerEnabled\n    });\n};\nvar mapDispatchToProps = { getSession: getSession, getProfile: getProfile };\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n",{"version":3,"file":"/Users/harsh/Documents/jHipster/src/main/webapp/app/app.tsx","sourceRoot":"","sources":["/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js!/Users/harsh/Documents/jHipster/src/main/webapp/app/app.tsx"],"names":[],"mappings":";AAAA,OAAO,uCAAuC,CAAC;AAC/C,OAAO,WAAW,CAAC;AAEnB,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,UAAU,IAAI,MAAM,EAAE,MAAM,kBAAkB,CAAC;AACxD,OAAO,EAAE,cAAc,EAAiB,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAGtE,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAChE,OAAO,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC;AACrE,OAAO,MAAM,MAAM,iCAAiC,CAAC;AACrD,OAAO,MAAM,MAAM,iCAAiC,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,+BAA+B,CAAC;AAChE,OAAO,aAAa,MAAM,iCAAiC,CAAC;AAC5D,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,SAAS,MAAM,YAAY,CAAC;AAInC;IAAyB,+BAA0B;IAAnD;;IAqCA,CAAC;IApCC,+BAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IAED,oBAAM,GAAN;QACE,IAAM,UAAU,GAAG,MAAM,CAAC;QAC1B,OAAO,CACL,oBAAC,MAAM;YACL,6BAAK,SAAS,EAAC,eAAe,EAAC,KAAK,EAAE,EAAE,UAAU,YAAA,EAAE;gBAClD,oBAAC,cAAc,IACb,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,QAAyB,EAClD,SAAS,EAAC,oBAAoB,EAC9B,cAAc,EAAC,gBAAgB,GAC/B;gBACF,oBAAC,aAAa;oBACZ,oBAAC,MAAM,IACL,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC3C,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAC3B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC/B,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EACzC,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAC7C,CACY;gBAChB,6BAAK,SAAS,EAAC,gCAAgC,EAAC,EAAE,EAAC,oBAAoB;oBACrE,oBAAC,IAAI,IAAC,SAAS,EAAC,SAAS;wBACvB,oBAAC,aAAa;4BACZ,oBAAC,SAAS,OAAG,CACC,CACX;oBACP,oBAAC,MAAM,OAAG,CACN,CACF,CACC,CACV,CAAC;IACJ,CAAC;IACH,UAAC;AAAD,CAAC,AArCD,CAAyB,KAAK,CAAC,SAAS,GAqCvC;;AAED,IAAM,eAAe,GAAG,UAAC,EAAkD;QAAhD,kCAAc,EAAE,0CAAkB;IAAmB,OAAA,CAAC;QAC/E,eAAe,EAAE,cAAc,CAAC,eAAe;QAC/C,OAAO,EAAE,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACjF,SAAS,EAAE,kBAAkB,CAAC,SAAS;QACvC,cAAc,EAAE,kBAAkB,CAAC,YAAY;QAC/C,gBAAgB,EAAE,kBAAkB,CAAC,gBAAgB;KACtD,CAAC;AAN8E,CAM9E,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,UAAU,YAAA,EAAE,UAAU,YAAA,EAAE,CAAC;AAKtD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,GAAG,CAAC,CAAC","sourcesContent":["import 'react-toastify/dist/ReactToastify.css';\nimport './app.css';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Card } from 'reactstrap';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { ToastContainer, ToastPosition, toast } from 'react-toastify';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getSession } from 'app/shared/reducers/authentication';\nimport { getProfile } from 'app/shared/reducers/application-profile';\nimport Header from 'app/shared/layout/header/header';\nimport Footer from 'app/shared/layout/footer/footer';\nimport { hasAnyAuthority } from 'app/shared/auth/private-route';\nimport ErrorBoundary from 'app/shared/error/error-boundary';\nimport { AUTHORITIES } from 'app/config/constants';\nimport AppRoutes from 'app/routes';\n\nexport interface IAppProps extends StateProps, DispatchProps {}\n\nexport class App extends React.Component<IAppProps> {\n  componentDidMount() {\n    this.props.getSession();\n    this.props.getProfile();\n  }\n\n  render() {\n    const paddingTop = '60px';\n    return (\n      <Router>\n        <div className=\"app-container\" style={{ paddingTop }}>\n          <ToastContainer\n            position={toast.POSITION.TOP_LEFT as ToastPosition}\n            className=\"toastify-container\"\n            toastClassName=\"toastify-toast\"\n          />\n          <ErrorBoundary>\n            <Header\n              isAuthenticated={this.props.isAuthenticated}\n              isAdmin={this.props.isAdmin}\n              ribbonEnv={this.props.ribbonEnv}\n              isInProduction={this.props.isInProduction}\n              isSwaggerEnabled={this.props.isSwaggerEnabled}\n            />\n          </ErrorBoundary>\n          <div className=\"container-fluid view-container\" id=\"app-view-container\">\n            <Card className=\"jh-card\">\n              <ErrorBoundary>\n                <AppRoutes />\n              </ErrorBoundary>\n            </Card>\n            <Footer />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = ({ authentication, applicationProfile }: IRootState) => ({\n  isAuthenticated: authentication.isAuthenticated,\n  isAdmin: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.ADMIN]),\n  ribbonEnv: applicationProfile.ribbonEnv,\n  isInProduction: applicationProfile.inProduction,\n  isSwaggerEnabled: applicationProfile.isSwaggerEnabled\n});\n\nconst mapDispatchToProps = { getSession, getProfile };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]}]}