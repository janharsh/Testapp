{"remainingRequest":"/Users/harsh/Documents/jHipster/node_modules/thread-loader/dist/cjs.js??ref--4-2!/Users/harsh/Documents/jHipster/node_modules/ts-loader/index.js??ref--4-3!/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js!/Users/harsh/Documents/jHipster/src/main/webapp/app/entities/associates/associates-delete-dialog.tsx","dependencies":[{"path":"/Users/harsh/Documents/jHipster/src/main/webapp/app/entities/associates/associates-delete-dialog.tsx","mtime":1555411049000},{"path":"/Users/harsh/Documents/jHipster/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/Users/harsh/Documents/jHipster/node_modules/cache-loader/dist/cjs.js","mtime":1555084384000},{"path":"/Users/harsh/Documents/jHipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/harsh/Documents/jHipster/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntity, deleteEntity } from './associates.reducer';\nvar AssociatesDeleteDialog = /** @class */ (function (_super) {\n    tslib_1.__extends(AssociatesDeleteDialog, _super);\n    function AssociatesDeleteDialog() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.confirmDelete = function (event) {\n            _this.props.deleteEntity(_this.props.associatesEntity.id);\n            _this.handleClose(event);\n        };\n        _this.handleClose = function (event) {\n            event.stopPropagation();\n            _this.props.history.goBack();\n        };\n        return _this;\n    }\n    AssociatesDeleteDialog.prototype.componentDidMount = function () {\n        this.props.getEntity(this.props.match.params.id);\n    };\n    AssociatesDeleteDialog.prototype.render = function () {\n        var associatesEntity = this.props.associatesEntity;\n        return (React.createElement(Modal, { isOpen: true, toggle: this.handleClose },\n            React.createElement(ModalHeader, { toggle: this.handleClose }, \"Confirm delete operation\"),\n            React.createElement(ModalBody, { id: \"testApp.associates.delete.question\" }, \"Are you sure you want to delete this Associates?\"),\n            React.createElement(ModalFooter, null,\n                React.createElement(Button, { color: \"secondary\", onClick: this.handleClose },\n                    React.createElement(FontAwesomeIcon, { icon: \"ban\" }),\n                    \"\\u00A0 Cancel\"),\n                React.createElement(Button, { id: \"jhi-confirm-delete-associates\", color: \"danger\", onClick: this.confirmDelete },\n                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\n                    \"\\u00A0 Delete\"))));\n    };\n    return AssociatesDeleteDialog;\n}(React.Component));\nexport { AssociatesDeleteDialog };\nvar mapStateToProps = function (_a) {\n    var associates = _a.associates;\n    return ({\n        associatesEntity: associates.entity\n    });\n};\nvar mapDispatchToProps = { getEntity: getEntity, deleteEntity: deleteEntity };\nexport default connect(mapStateToProps, mapDispatchToProps)(AssociatesDeleteDialog);\n",{"version":3,"file":"/Users/harsh/Documents/jHipster/src/main/webapp/app/entities/associates/associates-delete-dialog.tsx","sourceRoot":"","sources":["/Users/harsh/Documents/jHipster/node_modules/tslint-loader/index.js!/Users/harsh/Documents/jHipster/src/main/webapp/app/entities/associates/associates-delete-dialog.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAEhF,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAIjE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAI/D;IAA4C,kDAA6C;IAAzF;QAAA,qEAgCC;QA3BC,mBAAa,GAAG,UAAA,KAAK;YACnB,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;YACxD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,iBAAW,GAAG,UAAA,KAAK;YACjB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9B,CAAC,CAAC;;IAmBJ,CAAC;IA/BC,kDAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAYD,uCAAM,GAAN;QACU,IAAA,8CAAgB,CAAgB;QACxC,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,QAAC,MAAM,EAAE,IAAI,CAAC,WAAW;YACpC,oBAAC,WAAW,IAAC,MAAM,EAAE,IAAI,CAAC,WAAW,+BAAwC;YAC7E,oBAAC,SAAS,IAAC,EAAE,EAAC,oCAAoC,uDAA6D;YAC/G,oBAAC,WAAW;gBACV,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW;oBACjD,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;oCACvB;gBACT,oBAAC,MAAM,IAAC,EAAE,EAAC,+BAA+B,EAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa;oBACnF,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;oCACzB,CACG,CACR,CACT,CAAC;IACJ,CAAC;IACH,6BAAC;AAAD,CAAC,AAhCD,CAA4C,KAAK,CAAC,SAAS,GAgC1D;;AAED,IAAM,eAAe,GAAG,UAAC,EAA0B;QAAxB,0BAAU;IAAmB,OAAA,CAAC;QACvD,gBAAgB,EAAE,UAAU,CAAC,MAAM;KACpC,CAAC;AAFsD,CAEtD,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,SAAS,WAAA,EAAE,YAAY,cAAA,EAAE,CAAC;AAKvD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,sBAAsB,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IAssociates } from 'app/shared/model/associates.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './associates.reducer';\n\nexport interface IAssociatesDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class AssociatesDeleteDialog extends React.Component<IAssociatesDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.associatesEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { associatesEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>Confirm delete operation</ModalHeader>\n        <ModalBody id=\"testApp.associates.delete.question\">Are you sure you want to delete this Associates?</ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />&nbsp; Cancel\n          </Button>\n          <Button id=\"jhi-confirm-delete-associates\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />&nbsp; Delete\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ associates }: IRootState) => ({\n  associatesEntity: associates.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AssociatesDeleteDialog);\n"]}]}